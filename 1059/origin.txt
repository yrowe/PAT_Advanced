#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cmath>
using namespace std;

//step1 打素数表
//step2

const int maxn = 10010;
int Prime[maxn];
int PNum; //实际素数表长度

struct factor{
    int x,cnt;
}fac[10];

bool isPrime(int n){
    if(n == 1) return false;
    for(int i = 2;i*i <= n;++i){
        if(n%i == 0) return false;
    }
    return true;
}

void findPrime(){
    for(int i = 1;i < maxn;++i){
        if(isPrime(i) == true){
            Prime[PNum++] = i;
        }
    }
}

int main(){
    findPrime();
//    for(int i = 0;i < PNum;++i){
//        cout << Prime[i] << endl;
//    }
    int num,origin;
    cin >> num;
    if(num == 1){
        cout << "1=1" << endl;
        return 0;
    }

    origin = num;
    int facNum = 0;
    int i = 0;
    while(Prime[i] * Prime[i] <= num){
        if(num % Prime[i] == 0){
            fac[facNum].x = Prime[i];
            fac[facNum].cnt = 0;
            while(num % Prime[i] == 0){
                fac[facNum].cnt++;
                num /= Prime[i];
            }
            ++facNum;
        }
        ++i;

        if(num == 1) break;
    }
    if(num != 1){
        fac[facNum].x = num;
        fac[facNum++].cnt = 1;
    }

//    for(int m = 0;m < facNum;++m){
//        cout << fac[m].x << " " << fac[m].cnt << endl;
//    }

    cout << origin << "=";
    for(int m = 0;m < facNum;++m){
        if(m != 0) cout << "*";
        cout << fac[m].x;
        if(fac[m].cnt != 1) cout << "^" << fac[m].cnt;
    }
    cout << endl;
    return 0;
}
