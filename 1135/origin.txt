#include<iostream>
#include<fstream>
#include<cmath>
#include<algorithm>
using namespace std;

struct node {
	int val;
	struct node *lchild, *rchild;
};

void build(node* &root, int val) {
	if (root == NULL) {
		root = new node();
		root->val = val;
		root->lchild = root->rchild = NULL;
	}
	else if (abs(root->val) > abs(val)) {
		build(root->lchild, val);
	}
	else {
		build(root->rchild, val);
	}
}

bool judge1(node* root) {
	if (root == NULL)
		return true;
	if (root->val < 0) {
		if (root->lchild != NULL && root->lchild->val < 0) return false;
		if (root->rchild != NULL && root->rchild->val < 0) return false;
	}
	return judge1(root->lchild) && judge1(root->rchild);
}

int getNum(node* root) {
	if (root == NULL) return 0;
	int l = getNum(root->lchild);
	int r = getNum(root->rchild);
	return root->val > 0 ? max(l, r) + 1 : max(l, r);
}

bool judge2(node* root) {
	if (root == NULL)
		return true;
	int l = getNum(root->lchild);
	int r = getNum(root->rchild);
	if (l != r) return false;
	return judge2(root->lchild) && judge2(root->rchild);
}

int main() {
#ifdef _DEBUG
	ifstream cin("data.txt");
#endif
	int k;
	cin >> k;
	while (k--) {
		int n;
		cin >> n;
		node* root = NULL;
		while (n--) {
			int tmp;
			cin >> tmp;
			build(root, tmp);
		}
		if (root->val < 0 || judge1(root) == false || judge2(root) == false) {
			cout << "No" << endl;
		}
		else {
			cout << "Yes" << endl;
		}

	}
	system("pause");
#ifdef _DEBUG
	cin.close();
#endif
}