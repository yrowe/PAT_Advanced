#include<iostream>
#include<string>
#include<cstdio>
#include<fstream>
#include<cstring>
using namespace std;

struct bign {
	int d[1010];
	int len;
	bign() {
		memset(d, 0, sizeof(d));
		len = 0;
	}
};

bign change(string s) {
	bign a;
	a.len = s.size();
	for (int i = 0; i < a.len; ++i) {
		a.d[i] = s[a.len - i - 1] - '0';
	}
	return a;
}

bign rever(bign a) {
	bign b;
	b.len = a.len;
	for (int i = 0; i < a.len; ++i) {
		b.d[i] = a.d[a.len - i - 1];
	}
	while (b.len - 1 >= 1 && b.d[b.len - 1] == 0) {
		b.len--;
	}
	return b;
}




bool isPar(bign a) {
	for (int i = 0; i < a.len / 2; ++i) {
		if (a.d[i] != a.d[a.len - i - 1])
			return false;
	}
	return true;
}

void print_bign(bign a) {
	for (int i = a.len-1; i >= 0; --i) {
		cout << a.d[i];
	}
	return;
}

bign add(bign a, bign b) {
	bign c;
	int carry = 0;
	for (int i = 0; i < a.len || i < b.len; ++i) {
		int temp = a.d[i] + b.d[i] + carry;
		c.d[c.len++] = temp % 10;
		carry = temp / 10;
	}
	if (carry != 0) {
		c.d[c.len++] = carry;
	}
	print_bign(a);
	cout << " + ";
	print_bign(b);
	cout << " = ";
	print_bign(c);
	cout << endl;
	return c;
}


int main() {
#ifdef _DEBUG
	ifstream cin("data.txt");
#endif
	string s;
	cin >> s;
	bign val = change(s);
	bool flg = isPar(val);
	if (flg) {
		print_bign(val);
		cout << " is a palindromic number." << endl;
	}
	else {
		for (int i = 0; i < 10; ++i) {
			bign val2 = rever(val);
			val = add(val, val2);
			if (isPar(val)) {
				flg = true;
				break;
			}
		}
		if (flg == false) {
			cout << "Not found in 10 iterations." << endl;
		}
		else {
			print_bign(val);
			cout << " is a palindromic number." << endl;
		}
	}

#ifdef _DEBUG
	cin.close();
#endif
}